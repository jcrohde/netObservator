/*
Copyright (C) 2015-2016 Jan Christian Rohde

This file is part of netObservator.

netObservator is free software; you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation; either version 3
of the License, or (at your option) any later version.

netObservator is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with netObservator; if not, see http://www.gnu.org/licenses.
*/

#include "stringfactory.h"

StringFactory::StringFactory()
{

}

QString StringFactory::getStringFromKey(stringKey key) {
    switch (key) {
    case stringKey::PROGRAMNAME:
        return getProgramName();
        break;
    case stringKey::PROGRAMNAMELONG:
        return getProgramNameLong();
        break;
    case stringKey::VERSION:
        return getVersion();
        break;
    case stringKey::HELP:
        return getHelp();
        break;
    case stringKey::LICENSE:
        return getLicense();
        break;
    case stringKey::ABOUT:
        return getAbout();
        break;
    default:
        return "";
        break;
    }
}

QString StringFactory::getTitleFromKey(stringKey key) {
    switch (key) {
    case stringKey::HELP:
        return "Help";
        break;
    case stringKey::LICENSE:
        return "License";
        break;
    case stringKey::ABOUT:
        return "About";
        break;
    default:
        return "";
        break;
    }
}

QString StringFactory::getProgramName() {
    return "netObservator";
}

QString StringFactory::getProgramNameLong() {
    QString longName = getProgramName();
    longName += " " + getVersion();
    return longName;
}

QString StringFactory::getVersion() {
    return "1.2";
}

QString StringFactory::getTitle() {
    QString title = "<font color=\"#0000FF\"><h1>";
    title += getProgramNameLong();
    title += "</h1></font>";
    return title;
}

QString StringFactory::getHelp() {
    QString content = getTitle();
    content += getProgramName() + " is a small and simple to use sniffer app. The goal is to give you an overview and information about the connections of your computer.<br><br>";

    content += "When you start " + getProgramName() +  ", only information about the first packet of a connection with another host will be displayed. ";
    content += "This information will disappear some time after the last packet from or to this host has been sniffed. This will give you an overview of the hosts you are currently connected with.<br><br>";

    content += "In the settings you can select the information you like to be displayed. Also you can change the way the information is displayed. If you have selected \"save\" in the settings, ";
    content += "information about all packets will be displayed after sniffing and can be stored in an XML file.";

    content += "<h2>Quick Start</h2>";
    content += "For a quick start just select the device of your internet connection and click the \"Run\"-button. Then the program starts to sniff. ";
    content += "If you press this button a second time, the program will stop to sniff.<br><br>";

    content += "Green background color means that the packet is incoming. ";
    content += "Red means just that the packet is outgoing, which is not necessarily dangerous.<br><br>";

    content += "When you use " + getProgramName() + " at first time, it might be slow. The reason is that the host name needs to be extra resolved by a DNS server. It is the philosophy of " + getProgramName() + " that ";
    content += "it is important to provide you not only the IP numbers but also the names of the hosts you are connected with. After " + getProgramName() + " has gotten the domain name, it will be stored and " + getProgramName() + " will ";
    content += "become faster.";

    content += "<h2>File Menu</h2>";
    content += "By clicking on \"Save\" or \"SaveAs\" in the File menu, you can save the displayed information in an XML table. \"New\" cleans the displayed information. ";
    content += "Moreover by clicking on \"Open\", you can open an XML file generated by " + getProgramName() + " and information about all packets of this file will be displayed and you can search on them.";

    content += "<h2>Settings</h2>";

    content += "The duration of the time packet information is shown during sniffing can be selected in the settings under \"duration\". If you have selected \"save\", ";
    content += "information about all packets will be shown and can be stored in an XML file after sniffing.<br><br>";

    content += "The following information about a packet can be displayed:<dl>";
    content += "<dt>Time</dt><dd>The timestamp of a packet.</dd>";
    content += "<dt>Port</dt><dd>The port of the computer you a connected with.</dd>";
    content += "<dt>Address</dt><dd>The IP address of the computer you a connected with.</dd>";
    content += "<dt>Name</dt><dd>The Hostname of the computer you a connected with.</dd>";
    content += "<dt>Direction</dt><dd>Whether the packet is incoming (\"in\") or outcoming (\"out\").</dd>";
    content += "<dt>Packet</dt><dd>The bytes of the packet are represented by integers from 0 to 255.</dd>";
    content += "<dt>Content</dt><dd>The bytes of the packet are interpreted as characters.</dd>";
    content += "</dl>";

    content += "<h2>Search</h2>";

    content += "Insert a text and select a column, in which this text should occur. If you like to have an invert match check \"invert match\". Then click on the\"Find\"-button. ";
    content += "Only Information about the packets satisfying your condition will remain. You can also select \"regular expressions\" and search for entries containing your ";
    content += "inserted regular expression. By clicking at the arrow buttons, you can browse \"&lt;-\" backward and \"-&gt;\" forward ";
    content += "through the history of your searches.";


    content += "<h2>Libraries</h2>";
    content += getProgramName() + " uses WinPcap, which is a common programm for network sniffing. For the GUI, regular expressions, XML-reading and XML-writing Qt 5.2.0 is used.";

    return content;
}

QString StringFactory::getLicense(){
    QString res = getProgramName();
    res += " is free software; you can redistribute it and/or modify ";
    res = res.append("it under the terms of the GNU General Public License as published by ");
    res = res.append(" the Free Software Foundation; either version 3 of the License, or ");
    res = res.append("(at your option) any later version. ");
    res = res.append("<br><br>");
    res += getProgramName();
    res += " is distributed in the hope that it will be useful, ";
    res = res.append("but WITHOUT ANY WARRANTY; without even the implied warranty of ");
    res = res.append("MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the ");
    res = res.append("GNU General Public License for more details. ");
    res = res.append("<br><br>");
    res = res.append("You should have received a copy of the GNU General Public License ");
    res = res.append("along with ");
    res += getProgramName();
    res += "; if not, see http://www.gnu.org/licenses.";

    return res;
}

QString StringFactory::getAbout() {
    QString content = getTitle();
    content = content.append("");
    content = content.append("<br>");
    content = content.append("&copy; 2015-2016 Jan Christian Rohde<br>jan-christian.rohde@gmx.de");
    content = content.append("<br><br>");
    content = content.append("License: GNU General Public License 3");
    return content;
}
